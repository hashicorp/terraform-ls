// Code generated by "stringer -type=OpType -output=op_type_string.go"; DO NOT EDIT.

package operation

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OpTypeUnknown-0]
	_ = x[OpTypeGetTerraformVersion-1]
	_ = x[OpTypeGetInstalledTerraformVersion-2]
	_ = x[OpTypeObtainSchema-3]
	_ = x[OpTypeParseModuleConfiguration-4]
	_ = x[OpTypeParseVariables-5]
	_ = x[OpTypeParseModuleManifest-6]
	_ = x[OpTypeParseTerraformSources-7]
	_ = x[OpTypeLoadModuleMetadata-8]
	_ = x[OpTypeDecodeReferenceTargets-9]
	_ = x[OpTypeDecodeReferenceOrigins-10]
	_ = x[OpTypeDecodeVarsReferences-11]
	_ = x[OpTypeGetModuleDataFromRegistry-12]
	_ = x[OpTypeParseProviderVersions-13]
	_ = x[OpTypePreloadEmbeddedSchema-14]
	_ = x[OpTypeStacksPreloadEmbeddedSchema-15]
	_ = x[OpTypeSearchPreloadEmbeddedSchema-16]
	_ = x[OpTypeSchemaModuleValidation-17]
	_ = x[OpTypeSchemaStackValidation-18]
	_ = x[OpTypeSchemaSearchValidation-19]
	_ = x[OpTypeSchemaVarsValidation-20]
	_ = x[OpTypeReferenceValidation-21]
	_ = x[OpTypeReferenceStackValidation-22]
	_ = x[OpTypeTerraformValidate-23]
	_ = x[OpTypeParseStackConfiguration-24]
	_ = x[OpTypeParseSearchConfiguration-25]
	_ = x[OpTypeLoadStackMetadata-26]
	_ = x[OpTypeLoadSearchMetadata-27]
	_ = x[OpTypeLoadStackRequiredTerraformVersion-28]
	_ = x[OpTypeParseTestConfiguration-29]
	_ = x[OpTypeLoadTestMetadata-30]
	_ = x[OpTypeDecodeTestReferenceTargets-31]
	_ = x[OpTypeDecodeTestReferenceOrigins-32]
	_ = x[OpTypeDecodeWriteOnlyAttributes-33]
	_ = x[OpTypeSchemaTestValidation-34]
}

const _OpType_name = "OpTypeUnknownOpTypeGetTerraformVersionOpTypeGetInstalledTerraformVersionOpTypeObtainSchemaOpTypeParseModuleConfigurationOpTypeParseVariablesOpTypeParseModuleManifestOpTypeParseTerraformSourcesOpTypeLoadModuleMetadataOpTypeDecodeReferenceTargetsOpTypeDecodeReferenceOriginsOpTypeDecodeVarsReferencesOpTypeGetModuleDataFromRegistryOpTypeParseProviderVersionsOpTypePreloadEmbeddedSchemaOpTypeStacksPreloadEmbeddedSchemaOpTypeSearchPreloadEmbeddedSchemaOpTypeSchemaModuleValidationOpTypeSchemaStackValidationOpTypeSchemaSearchValidationOpTypeSchemaVarsValidationOpTypeReferenceValidationOpTypeReferenceStackValidationOpTypeTerraformValidateOpTypeParseStackConfigurationOpTypeParseSearchConfigurationOpTypeLoadStackMetadataOpTypeLoadSearchMetadataOpTypeLoadStackRequiredTerraformVersionOpTypeParseTestConfigurationOpTypeLoadTestMetadataOpTypeDecodeTestReferenceTargetsOpTypeDecodeTestReferenceOriginsOpTypeDecodeWriteOnlyAttributesOpTypeSchemaTestValidation"

var _OpType_index = [...]uint16{0, 13, 38, 72, 90, 120, 140, 165, 192, 216, 244, 272, 298, 329, 356, 383, 416, 449, 477, 504, 532, 558, 583, 613, 636, 665, 695, 718, 742, 781, 809, 831, 863, 895, 926, 952}

func (i OpType) String() string {
	if i >= OpType(len(_OpType_index)-1) {
		return "OpType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _OpType_name[_OpType_index[i]:_OpType_index[i+1]]
}
