// Code generated by "stringer -type=OpType -output=op_type_string.go"; DO NOT EDIT.

package operation

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OpTypeUnknown-0]
	_ = x[OpTypeGetTerraformVersion-1]
	_ = x[OpTypeGetInstalledTerraformVersion-2]
	_ = x[OpTypeObtainSchema-3]
	_ = x[OpTypeParseModuleConfiguration-4]
	_ = x[OpTypeParseVariables-5]
	_ = x[OpTypeParseModuleManifest-6]
	_ = x[OpTypeLoadModuleMetadata-7]
	_ = x[OpTypeDecodeReferenceTargets-8]
	_ = x[OpTypeDecodeReferenceOrigins-9]
	_ = x[OpTypeDecodeVarsReferences-10]
	_ = x[OpTypeGetModuleDataFromRegistry-11]
	_ = x[OpTypeParseProviderVersions-12]
	_ = x[OpTypePreloadEmbeddedSchema-13]
	_ = x[OpTypeSchemaModuleValidation-14]
	_ = x[OpTypeSchemaVarsValidation-15]
	_ = x[OpTypeReferenceValidation-16]
	_ = x[OpTypeTerraformValidate-17]
	_ = x[OpTypeParseStacks-18]
}

const _OpType_name = "OpTypeUnknownOpTypeGetTerraformVersionOpTypeGetInstalledTerraformVersionOpTypeObtainSchemaOpTypeParseModuleConfigurationOpTypeParseVariablesOpTypeParseModuleManifestOpTypeLoadModuleMetadataOpTypeDecodeReferenceTargetsOpTypeDecodeReferenceOriginsOpTypeDecodeVarsReferencesOpTypeGetModuleDataFromRegistryOpTypeParseProviderVersionsOpTypePreloadEmbeddedSchemaOpTypeSchemaModuleValidationOpTypeSchemaVarsValidationOpTypeReferenceValidationOpTypeTerraformValidateOpTypeParseStacks"

var _OpType_index = [...]uint16{0, 13, 38, 72, 90, 120, 140, 165, 189, 217, 245, 271, 302, 329, 356, 384, 410, 435, 458, 475}

func (i OpType) String() string {
	if i >= OpType(len(_OpType_index)-1) {
		return "OpType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _OpType_name[_OpType_index[i]:_OpType_index[i+1]]
}
