name: release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

permissions:
  contents: write # for uploading release artifacts
  issues: write # for closing milestone via goreleaser
  packages: read # for downloading signore docker image

env:
  GOPROXY: https://proxy.golang.org/

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Unshallow
        run: git fetch --prune --unshallow
      -
        name: Read go version
        id: go-version
        run: |
          content=`cat ./.go-version`
          echo "::set-output name=content::$content"
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          # TODO: Replace with go-version-from-file when it is supported
          # https://github.com/actions/setup-go/pull/62
          go-version: ${{ steps.go-version.outputs.content }}
      -
        name: Generate provider schemas
        run: go generate ./internal/schemas
      -
        name: Install hc-codesign
        run: |
          docker login docker.pkg.github.com -u docker -p '${{ secrets.CODESIGN_GITHUB_TOKEN }}' && \
          docker pull docker.pkg.github.com/hashicorp/hc-codesign/hc-codesign:$VERSION && \
          echo "::set-output name=image::docker.pkg.github.com/hashicorp/hc-codesign/hc-codesign:$VERSION"
        id: codesign
        env:
          VERSION: v0
      -
        name: Install signore
        uses: hashicorp/setup-signore-package@v1
      -
        name: Setup hc-releases
        uses: hashicorp/actions-setup-hc-releases@v1
        with:
          github-token: ${{ secrets.CODESIGN_GITHUB_TOKEN }}
      -
        name: Release
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release
        env:
          HC_RELEASES_HOST_STAGING: ${{ secrets.HC_RELEASES_HOST_STAGING }}
          HC_RELEASES_KEY_STAGING: ${{ secrets.HC_RELEASES_KEY_STAGING }}
          CODESIGN_IMAGE: ${{ steps.codesign.outputs.image }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_TOKEN: ${{ secrets.HOMEBREW_TAP_GITHUB_TOKEN }}
          ARTIFACTORY_TOKEN: ${{ secrets.ARTIFACTORY_TOKEN }}
          ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
          CIRCLE_TOKEN: ${{ secrets.CIRCLE_TOKEN }}
          SIGNORE_CLIENT_ID: ${{ secrets.SIGNORE_CLIENT_ID }}
          SIGNORE_CLIENT_SECRET: ${{ secrets.SIGNORE_CLIENT_SECRET }}
          SIGNORE_SIGNER: ${{ secrets.SIGNORE_SIGNER }}
      -
        name: Create Release metadata
        uses: hashicorp/actions-hc-releases-create-metadata@main
        with:
          private-tools-token: ${{ secrets.CODESIGN_GITHUB_TOKEN }}
          product-name: "terraform-ls"
          version: ${{ github.ref_name }}
          hc-releases-host: ${{ secrets.HC_RELEASES_HOST_STAGING}}
          hc-releases-key: ${{ secrets.HC_RELEASES_KEY_STAGING }}
      -
        name: Promote
        uses: hashicorp/actions-hc-releases-promote@main
        with:
          product-name: "terraform-ls"
          version: ${{ github.ref_name }}
          hc-releases-host: ${{ secrets.HC_RELEASES_HOST_PROD }}
          hc-releases-key: ${{ secrets.HC_RELEASES_KEY_PROD }}
          hc-releases-source_env_key: ${{ secrets.HC_RELEASES_KEY_STAGING }}
